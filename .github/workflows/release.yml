name: Create Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number (e.g., 1.0.0)'
        required: true
        default: '1.0.0'
      release_title:
        description: 'Release title'
        required: true
        default: 'Release v1.0.0'
      prerelease:
        description: 'Is this a prerelease?'
        type: boolean
        default: false

permissions:
  contents: write

jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build Windows version
      run: dotnet publish -c Release -r win-x64 --self-contained true -p:PublishSingleFile=true -o ./publish/windows
      
    - name: Build Linux version
      run: dotnet publish -c Release -r linux-x64 --self-contained true -p:PublishSingleFile=true -o ./publish/linux
      
    - name: Create Windows zip
      run: Compress-Archive -Path ./publish/windows/* -DestinationPath ./MCGame-Windows-x64.zip
      
    - name: Create Linux tar.gz
      run: tar -czf ./MCGame-Linux-x64.tar.gz -C ./publish/linux .
      
    - name: Generate Release Notes
      id: release_notes
      run: |
        $tag = "${{ github.ref_name }}"
        if ("${{ github.event_name }}" -eq "workflow_dispatch") {
          $tag = "v${{ github.event.inputs.version }}"
        }
        
        echo "TAG_NAME=$tag" >> $env:GITHUB_OUTPUT
        
        $notes = @"
        # MCGame Release $tag
        
        ## What's New
        - ECS系统架构优化
        - 性能监控和调试工具
        - 完整的文档和使用指南
        - 支持Windows和Linux平台
        
        ## System Requirements
        - .NET 9.0 Runtime
        - OpenGL 3.3+ compatible graphics card
        - 2GB RAM minimum
        
        ## Installation
        1. Download the appropriate package for your platform
        2. Extract the archive
        3. Run the executable:
           - Windows: MCGame.exe
           - Linux: ./MCGame
        
        ## Controls
        - WASD: Move
        - Mouse: Look around
        - Space: Jump
        - Shift: Sprint
        - F: Toggle fly mode
        - F3: Toggle debug info
        - F11: Toggle fullscreen
        - +/-: Adjust render distance
        - R: Regenerate world
        
        ## Known Issues
        - Some edge cases in ECS entity deletion
        - Performance may vary based on hardware
        - Limited optimization for large worlds
        
        ## Technical Details
        - Built with MonoGame 3.8.1
        - Uses Friflo ECS for entity management
        - Features procedural terrain generation
        - Implements chunk-based world rendering
        "@
        
        $notes | Out-File -FilePath ./RELEASE_NOTES.md -Encoding UTF8
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.release_notes.outputs.TAG_NAME }}
        name: ${{ github.event.inputs.release_title || format('Release {0}', steps.release_notes.outputs.TAG_NAME) }}
        body_path: ./RELEASE_NOTES.md
        draft: false
        prerelease: ${{ github.event.inputs.prerelease || false }}
        files: |
          ./MCGame-Windows-x64.zip
          ./MCGame-Linux-x64.tar.gz
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}