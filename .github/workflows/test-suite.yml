name: Test Suite

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '7.0.x'
    
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build
      run: dotnet build --no-restore
      
    - name: Run Unit Tests
      run: dotnet test --no-build --verbosity normal --logger "console;verbosity=detailed" --collect:"XPlat Code Coverage"
      
    - name: Run Integration Tests
      run: dotnet test tests/Integration --no-build --verbosity normal --logger "console;verbosity=detailed"
      
    - name: Run Performance Tests
      run: dotnet test tests/Performance --no-build --verbosity normal --logger "console;verbosity=detailed"
      
    - name: Generate Coverage Report
      run: |
        dotnet tool install -g dotnet-reportgenerator-globaltool
        reportgenerator -reports:coverage.xml -targetdir:coverage-report -reporttypes:HtmlInline_AzurePipelines
      if: success()
      
    - name: Upload Coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
      if: success()
      
    - name: Upload Test Results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: test-results
        path: |
          TestResults/
          coverage-report/

  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '7.0.x'
    
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build Release
      run: dotnet build --configuration Release --no-restore
      
    - name: Publish
      run: dotnet publish --configuration Release --output ./publish
      
    - name: Upload Build Artifact
      uses: actions/upload-artifact@v3
      with:
        name: publish
        path: ./publish